# Measured Move (MM)
# by EBtrader Jan 2017

input n = 8;
input ShowLines = yes;

def h = high;
def l = low;
def Firstbar = BarNumber();
def Highest = fold i = 1
             to n + 1
             with p = 1
             while p
             do h > GetValue(h, -i);
def A = if (Firstbar > n
            and h == Highest(h, n)
            and Highest)
            then h
            else Double.NaN;
def Lowest = fold j = 1
            to n + 1
            with q = 1
            while q
            do l < GetValue(l, -j);
def B = if (Firstbar > n
            and l == Lowest(l, n)
            and Lowest)
            then l
            else Double.NaN;
rec Al = if !IsNaN(A)
             then A
             else Al[1];
rec Bl = if !IsNaN(B)
             then B
             else Bl[1];

plot ph = Round(A, 2);
ph.SetPaintingStrategy(PaintingStrategy.VALUES_ABOVE);

plot hL = if Al > 0
                       then Al
                       else Double.NaN;
hL.SetHiding(!ShowLines);
hL.SetPaintingStrategy(PaintingStrategy.DASHES);
hL.SetDefaultColor(Color.GREEN);

plot pl = Round(B, 2);
pl.SetPaintingStrategy(PaintingStrategy.VALUES_BELOW);

plot ll = if Bl > 0
                      then Bl
                      else Double.NaN;
ll.SetHiding(!ShowLines);
ll.SetPaintingStrategy(PaintingStrategy.DASHES);
ll.SetDefaultColor(Color.RED);

#Targets
#Lower Targets

def Targetlow = bl - absValue(bl-al);
AddLabel(yes, "1stLowTgt " + bl,color.red);
AddLabel(yes, "2ndLowTgt " + Targetlow,color.red);

plot low = bl;
low.SetDefaultColor(Color.red);
low.SetStyle(Curve.SHORT_DASH);
low.SetLineWeight(5);


plot firstlow = targetlow;
firstlow.SetDefaultColor(Color.CYAN);
firstlow.SetStyle(Curve.SHORT_DASH);
firstlow.SetLineWeight(1);

#Upper Targets

def Targethigh = al + absValue(bl-al);
AddLabel(yes, "1stHighTgt " + al,color.green);
AddLabel(yes, "2ndHighTgt " + Targethigh,color.green);

plot high = al;
high.SetDefaultColor(Color.green);
high.SetStyle(Curve.SHORT_DASH);
high.SetLineWeight(5);


plot firsthigh = targethigh;
firsthigh.SetDefaultColor(Color.CYAN);
firsthigh.SetStyle(Curve.SHORT_DASH);
firsthigh.SetLineWeight(1);

def tickstotgthigh = absValue(close - high);
AddLabel(yes, "TkstoHighTgt " + tickstotgthigh*100,color.green);

def tickstotgtlow = absValue(close - firstlow);
AddLabel(yes, "TkstoLowTgt " + tickstotgtlow*100,color.red);


# End Code